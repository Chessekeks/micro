// Code generated by protoc-gen-go-micro. DO NOT EDIT.
// protoc-gen-go-micro version: v3.5.3
// source: health.proto

package health

import (
	context "context"
	v3 "go.unistack.org/micro-server-http/v3"
	codec "go.unistack.org/micro/v3/codec"
	server "go.unistack.org/micro/v3/server"
)

type healthServiceServer struct {
	HealthServiceServer
}

func (h *healthServiceServer) Live(ctx context.Context, req *codec.Frame, rsp *codec.Frame) error {
	return h.HealthServiceServer.Live(ctx, req, rsp)
}

func (h *healthServiceServer) Ready(ctx context.Context, req *codec.Frame, rsp *codec.Frame) error {
	return h.HealthServiceServer.Ready(ctx, req, rsp)
}

func (h *healthServiceServer) Version(ctx context.Context, req *codec.Frame, rsp *codec.Frame) error {
	return h.HealthServiceServer.Version(ctx, req, rsp)
}

func RegisterHealthServiceServer(s server.Server, sh HealthServiceServer, opts ...server.HandlerOption) error {
	type healthService interface {
	}
	type HealthService struct {
		healthService
	}
	h := &healthServiceServer{sh}
	var nopts []server.HandlerOption
	nopts = append(nopts, v3.HandlerMetadata(HealthServiceServerEndpoints))
	return s.Handle(s.NewHandler(&HealthService{h}, append(nopts, opts...)...))
}
