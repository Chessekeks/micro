syntax = "proto3";

package micro.server.health;
option go_package = "go.unistack.org/micro/v3/server/health;health";

import "api/annotations.proto";
import "openapiv3/annotations.proto";
import "codec/frame.proto";

service Health {
	rpc Live(micro.codec.Frame) returns (micro.codec.Frame) {
		option (micro.openapiv3.openapiv3_operation) = {
      operation_id: "Live";
      responses: {
        default: {
          reference: {
            _ref: "micro.codec.Frame";
          };
        };
      };
    };
		option (micro.api.http) = { get: "/live"; };
  };
	rpc Ready(micro.codec.Frame) returns (micro.codec.Frame) {
		option (micro.openapiv3.openapiv3_operation) = {
      operation_id: "Ready";
      responses: {
        default: {
          reference: {
            _ref: "micro.codec.Frame";
          };
        };
      };
    };
		option (micro.api.http) = { get: "/ready"; };
  };
	rpc Version(micro.codec.Frame) returns (micro.codec.Frame) {
		option (micro.openapiv3.openapiv3_operation) = {
      operation_id: "Version";
      responses: {
        default: {
          reference: {
            _ref: "micro.codec.Frame";
          };
        };
      };
    };
		option (micro.api.http) = { get: "/version"; };
  };
};
